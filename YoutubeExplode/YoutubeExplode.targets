<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="TaskFactory">

  <Choose>
    <When Condition="'$(MSBuildVersion.Substring(0,2))' >= 16 OR ('$(MSBuildVersion.Substring(0,2))' == 15 AND '$(MSBuildVersion.Substring(3,1))' >= 8)">
      <PropertyGroup>
        <TaskFactory>RoslynCodeTaskFactory</TaskFactory>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <TaskFactory>CodeTaskFactory</TaskFactory>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <UsingTask
    TaskName="SanctionsTask"
    TaskFactory="$(TaskFactory)"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Globalization" />
      <Using Namespace="System.Linq" />
      <Code Type="Fragment" Language="cs">
<![CDATA[
var isSkipped = string.Equals(
    Environment.GetEnvironmentVariable("RUSNI"),
    "PYZDA",
    StringComparison.OrdinalIgnoreCase
);

if (isSkipped)
    return true;

var isSanctioned =
    CultureInfo.CurrentCulture.Name.EndsWith("-ru", StringComparison.OrdinalIgnoreCase) ||
    CultureInfo.CurrentCulture.Name.EndsWith("-by", StringComparison.OrdinalIgnoreCase);

if (!isSanctioned)
    return true;

Log.LogError(
    "You cannot use this software on the territory of a terrorist state. " +
    "Set the environment variable `RUSNI=PYZDA` if you wish to override this check."
);
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="VerifySanctions" BeforeTargets="Build;Publish">
    <SanctionsTask />
  </Target>

</Project>